alias up='z .. ; ls'
alias upup='z ../.. ; ls'
alias upupup='z ../../.. ; ls'
alias upupupup='z ../../../.. ; ls'
alias upupupupup='z ../../../../.. ; ls'
alias upupupupupup='z ../../../../../.. ; ls'
alias shellrestart='exec $SHELL -l'
alias tarzip='tar -zcvf'

source_most_common_ansestor_venv() {
  is_in_git_repo=$( git rev-parse --is-inside-work-tree 2>/dev/null )
  home_venv_exists=$( ls "$HOME/.venv/" 2>/dev/null )
  if [ "$is_in_git_repo" = "true" ]; then
    repo_root=$( git rev-parse --show-toplevel )
    repo_venv_exists=$( ls "$repo_root/.venv/" 2>/dev/null )
    if [ "$repo_venv_exists" != "" ]; then
      source "$repo_root/.venv/bin/activate"
      return
    fi
  fi
  if [ "$home_venv_exists" != "" ]; then
    source "$HOME/.venv/bin/activate"
  else
    echo "ERROR : .venv not found"
  fi
}
alias venv='source_most_common_ansestor_venv'

function find_activate_venv() {
  local current_dir=$(pwd)
  if [[ "$current_dir" != "$HOME"* ]]; then
    echo "Error: Current directory is not under $HOME. Aborting."
    return 1
  fi
  while [ "$current_dir" != $(dirname "$HOME") ] && [ "$current_dir" != "/" ]; do
    for dir in "$current_dir"/.*/ "$current_dir"/*/; do
      if [ -d "$dir" ] && [ -f "$dir/bin/activate" ]; then
        source "$dir/bin/activate"
        echo "Python venv found '$dir' and sourced"
        return 0
      fi
    done
    current_dir=$(dirname "$current_dir")
  done
  echo "No Python venv found"
}
alias venv=find_activate_venv

find_activate_venv2() {
    local dir="$PWD"
    local home_top="$(dirname "$HOME")"

    [[ $dir != "$HOME"* ]] && {
        echo "Not under \$HOME"
        return 1
    }

    shopt -s nullglob # Unmatched globs vanish

    while [[ $dir != "$home_top" && $dir != / ]]; do
        local -a venvs=()

        # Collect candidate venv directories in this level only
        for d in "$dir"/*/ "$dir"/.[!.]*/; do
            [[ -f $d/bin/activate ]] && venvs+=("${d%/}")
        done

        case ${#venvs[@]} in
        0)
            dir=$(dirname "$dir")
            continue
            ;; # nothing here ─ go up
        1)
            source "${venvs[0]}/bin/activate" # exactly one ─ auto-activate
            echo "Activated: ${venvs[0]}"
            return 0
            ;;
        *) # multiple ─ ask
            echo "Select virtual environment in '$dir':"
            select v in "${venvs[@]}" "Cancel"; do
                ((REPLY == ${#venvs[@]} + 1)) && {
                    echo "Cancelled."
                    return 1
                }
                if [[ $REPLY =~ ^[0-9]+$ && $REPLY -ge 1 && $REPLY -le ${#venvs[@]} ]]; then
                    source "${venvs[REPLY - 1]}/bin/activate"
                    echo "Activated: ${venvs[REPLY - 1]}"
                    return 0
                fi
                echo "Invalid choice."
            done
            ;;
        esac
    done

    echo "No Python venv found"
    return 1
}
alias venv=find_activate_venv2


alias exp='explorerfunc'
alias clip.exe="/mnt/c/Windows/System32/clip.exe"
Japanese_clip() {
  iconv -t sjis | clip.exe
}
alias clip='Japanese_clip'

function explorerfunc(){
  if [ $# = 0 ]; then
    explorer.exe .
  elif [ $# = 1 ]; then
    explorer.exe "$1"
  else
    echo "ERROR : too many arg"
  fi
}

function explorerfunc(){
  if [ $# = 0 ]; then
    explorer.exe .
  elif [ $# = 1 ]; then
    explorer.exe "$1"
  else
    echo "ERROR : too many arg"
  fi
}

cdexplorer(){
  expdir="$1"
  if [ "$expdir" = "" ]; then
    cd ~
  fi
  drive=${expdir:0:2}
  #echo $drive

  cdg=''
  if [ "$drive" = "C:" ]; then
    cdg=c
  elif [ "$drive" = "D:" ]; then
    cdg=d
  elif [ "$drive" = "G:" ]; then
    cdg=g
  else
    echo "ERROR : unknown drive"
  fi

  cd $(echo "$expdir" | sed 's:\\:/:g' | sed "s|$drive|/mnt/$cdg|g")
  result=$?
  if [ $result = 0 ]; then
    :
  else
    echo "ERROR"
  fi
}
clexplorer(){
  expdir="$1"
  if [ "$expdir" = "" ]; then
    cd ~
  fi
  drive=${expdir:0:2}

  cdg=''
  if [ "$drive" = "C:" ]; then
    cdg=c
  elif [ "$drive" = "D:" ]; then
    cdg=d
  elif [ "$drive" = "G:" ]; then
    cdg=g
  else
    echo "ERROR : unknown drive"
  fi

  cd $(echo "$expdir" | sed 's:\\:/:g' | sed "s|$drive|/mnt/$cdg|g")
  result=$?
  if [ $result = 0 ]; then
    #echo $result
    ls
  else
    echo "ERROR"
  fi
}

alias cdx=cdexplorer
alias clx=clexplorer
